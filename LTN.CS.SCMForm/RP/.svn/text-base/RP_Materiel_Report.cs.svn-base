using LTN.CS.Base;
using LTN.CS.Core.Helper;
using LTN.CS.SCMEntities.PM;
using LTN.CS.SCMForm.Common;
using LTN.CS.SCMService.PM.Interface;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using DevExpress.XtraEditors.DXErrorProvider;
using LTN.CS.SCMForm.PM;
using LTN.CS.SCMEntities.ConditionEntity;
using LTN.CS.SCMEntities.SM;
using LTN.CS.SCMService.SM.Interface;
using DevExpress.XtraReports.UI;
using DevExpress.XtraPrinting;

namespace LTN.CS.SCMForm.RP
{
    public partial class RP_Materiel_Report : CoreForm
    {
        #region 实例变量
        public IPM_Pond_Bill_SuppliesService MainService { get; set; }
        private int selectMainId { get; set; }
        private bool queryMain { get; set; }
        private int selectMainRowNum { get; set; }
        private PM_Pond_Bill_Supplies selectMainEntity { get; set; }
        public ISM_Guid_InfoService guidService { get; set; }
        #endregion

        #region 构造函数
        public RP_Materiel_Report()
        {
            InitializeComponent();
        }
        #endregion

        #region 自定义方法
        private void SetGridData(bool isFirst)
        {

            try
            {
                int selectLeftIdOld = selectMainId;
                queryMain = false;
                txt_CarName.Focus();
                Hashtable ht = setCondition();
                var result = MainService.ExecuteDB_QueryByPond(ht);
                gcl_main.DataSource = result;

                if (!isFirst)
                {
                    selectMainId = selectLeftIdOld;
                    SetMainFocusRow();
                }
                queryMain = true;

            }
            catch (Exception ex)
            {

            }

        }

        private Hashtable setCondition()
        {
            Hashtable ht = new Hashtable();
            if (!string.IsNullOrEmpty(txt_CarName.Text.Trim()))
            {
                ht.Add("CarName", txt_CarName.Text.Trim());
            }
            if (!string.IsNullOrEmpty(txt_FromDeptName.Text.Trim()))
            {
                ht.Add("FromDeptName", txt_FromDeptName.Text.Trim());
            }
            if (!string.IsNullOrEmpty(txt_ToDeptName.Text.Trim()))
            {
                ht.Add("ToDeptName", txt_ToDeptName.Text.Trim());
            }
            if (!string.IsNullOrEmpty(txt_MaterialName.Text.Trim()))
            {
                ht.Add("MaterialName", txt_MaterialName.Text.Trim());
            }
            if (!string.IsNullOrEmpty(txt_PlanNo.Text.Trim()))
            {
                ht.Add("PlanNo", txt_PlanNo.Text.Trim());
            }
            if (!string.IsNullOrEmpty(txt_WgtlistNo.Text.Trim()))
            {
                ht.Add("WgtNo", txt_WgtlistNo.Text.Trim());
            }
            ht.Add("StartTime", CommonHelper.TimeToStr14(MyDateTimeHelper.ConvertToDateTimeDefaultNow(date_StartTime.Text)));
            ht.Add("EndTime", CommonHelper.TimeToStr14(MyDateTimeHelper.ConvertToDateTimeDefaultNow(date_EndTime.Text)));
            return ht;
        }

        private void SetMainFocusRow()
        {
            int rowcount = gvw_main.RowCount;
            bool isFocused = false;
            if (selectMainId != 0)
            {
                for (int i = 0; i < rowcount; i++)
                {
                    PM_Pond_Bill_Supplies group = gvw_main.GetRow(i) as PM_Pond_Bill_Supplies;
                    if (group.IntId == selectMainId)
                    {
                        gvw_main.FocusedRowHandle = i;
                        selectMainRowNum = i;
                        isFocused = true;
                        break;
                    }
                }
            }
            if (!isFocused)
            {
                if (rowcount - 1 < selectMainRowNum)
                {
                    gvw_main.FocusedRowHandle = rowcount - 1;
                    selectMainRowNum = rowcount - 1;
                }
                else
                {
                    gvw_main.FocusedRowHandle = selectMainRowNum;
                }
            }
        }
        #endregion

        private void btn_Query_Click(object sender, EventArgs e)
        {
            SetGridData(false);
        }

        private void gToolStripButton3_Click(object sender, EventArgs e)
        {
            try
            {
                int[] rowHandles = gvw_main.GetSelectedRows();
                if (rowHandles.Length == 0)
                {
                    return;
                }

                if (string.IsNullOrEmpty(txt_FromDeptName.Text.Trim()))
                {
                    dxErrorProvider1.SetError(txt_FromDeptName, "供货单位为必填!", ErrorType.Warning);
                    return;
                }
                if (string.IsNullOrEmpty(txt_ToDeptName.Text.Trim()))
                {
                    dxErrorProvider1.SetError(txt_ToDeptName, "收货单位为必填!", ErrorType.Warning);
                    return;
                }
                if (string.IsNullOrEmpty(txt_MaterialName.Text.Trim()))
                {
                    dxErrorProvider1.SetError(txt_MaterialName, "品名为必填!", ErrorType.Warning);
                    return;
                }
                IList<PM_Pond_Bill_Supplies> list = new List<PM_Pond_Bill_Supplies>();
                if (rowHandles.Count() > 0)
                {
                    for (int i = rowHandles.Count() - 1; i >= 0; i--)
                    {
                        //string s = gvw_main.GetRowCellValue(rowHandles[i], "WgtlistNo").ToString();
                        PM_Pond_Bill_Supplies truck = MainService.ExecuteDB_QueryByWgistonNo(gvw_main.GetRowCellValue(rowHandles[i], "WgtlistNo").ToString());
                        if (truck != null)
                        {
                            truck.PrintNum = 9;
                            var rs = MainService.ExecuteDB_UpdatePrint1(truck);
                            list.Add(truck);
                        }
                    }
                }
                XtraReportRP xt = new XtraReportRP();
                XtraReportRP_2 xt2 = new XtraReportRP_2();
                XtraReportRP_3 xt3 = new XtraReportRP_3();
                XtraReportRP_4 xt4 = new XtraReportRP_4();
                XtraReportRP_5 xt5 = new XtraReportRP_5();

                if (list != null && list.Count != 0)
                {
                    Wgstion.fromdeptname = txt_FromDeptName.Text.Trim();
                    Wgstion.todeptname = txt_ToDeptName.Text.Trim();
                    Wgstion.materialname = txt_MaterialName.Text.Trim();
                    Wgstion.wgistion1 = Guid.NewGuid().ToString("N");
                    SM_Guid_Info guidInfo = new SM_Guid_Info();
                    guidInfo.strGuid = Wgstion.wgistion1;
                    guidService.ExecuteDB_InsertGuidInfo(guidInfo);
                    xt.DataSource = list;
                    xt.PaperKind = System.Drawing.Printing.PaperKind.A4;
                    xt2.DataSource = list;
                    xt2.PaperKind = System.Drawing.Printing.PaperKind.A4;
                    xt3.DataSource = list;
                    xt3.PaperKind = System.Drawing.Printing.PaperKind.A4;
                    xt4.DataSource = list;
                    xt4.PaperKind = System.Drawing.Printing.PaperKind.A4;
                    xt5.DataSource = list;
                    xt5.PaperKind = System.Drawing.Printing.PaperKind.A4;
                    //ReportPrintTool tool = new ReportPrintTool(xt);
                    //tool.ShowPreview();
                    System.Drawing.Printing.PrintDocument print = new System.Drawing.Printing.PrintDocument();
                    string sDefault = print.PrinterSettings.PrinterName;//默认打印机名
                    xt.Print(sDefault);
                    xt2.Print(sDefault);
                    xt3.Print(sDefault);
                    xt4.Print(sDefault);
                    xt5.Print(sDefault);
                    SetGridData(false);
                }
            }
            catch (Exception ex)
            {

            }
        }

        private void RP_Materiel_Report_Load(object sender, EventArgs e)
        {
            InitView(gvw_main);
            date_EndTime.EditValue = DateTime.Now.ToString("yyyy-MM-dd 23:59:59");
            date_StartTime.EditValue = DateTime.Now.AddDays(-3).ToString("yyyy-MM-dd 00:00:00");
        }

        private void gToolStripButton2_Click(object sender, EventArgs e)
        {
            IList<PM_Pond_Bill_Supplies> list = new List<PM_Pond_Bill_Supplies>();

            int[] rowHandles = gvw_main.GetSelectedRows();
            if (rowHandles.Count() > 0)
            {
                for (int i = rowHandles.Count() - 1; i >= 0; i--)
                {
                    PM_Pond_Bill_Supplies truck = MainService.ExecuteDB_QueryByWgistonNo(gvw_main.GetRowCellValue(rowHandles[i], "WgtlistNo").ToString());
                    if (truck != null)
                    {
                        truck.PrintNum += 1;
                        var rs = MainService.ExecuteDB_UpdatePrint1(truck);
                        Wgstion.wgistion1 = truck.WgtlistNo;
                        list.Add(truck);
                    }
                }
                XtraReportRP2 xt = new XtraReportRP2();
                xt.DataSource = list;
                xt.PageHeight = 500;
                xt.PageWidth = 827;
                xt.PaperKind = System.Drawing.Printing.PaperKind.Custom;
                //ReportPrintTool tool = new ReportPrintTool(xt);
                //tool.ShowPreview();
                System.Drawing.Printing.PrintDocument print = new System.Drawing.Printing.PrintDocument();
                string sDefault = print.PrinterSettings.PrinterName;//默认打印机名
                xt.Print(sDefault);
                SetGridData(false);
            }
        }

        private void gToolStripButton4_Click(object sender, EventArgs e)
        {
            if (gcl_main.DataSource == null)
                return;
            SaveFileDialog fileDialog = new SaveFileDialog();
            fileDialog.Title = Text;

            //fileDialog.Filter = "Excel文件(*.xls)|*.xls";
            fileDialog.Filter = "Excel文件(*.xlsx)|*.xlsx|Excel文件(*.xls)|*.xls";
            DialogResult dialogResult = fileDialog.ShowDialog(this);
            if (dialogResult == DialogResult.OK)
            {
                XlsxExportOptions options = new XlsxExportOptions();//使用xlsx
                options.SheetName = fileDialog.FileName;
                options.TextExportMode = TextExportMode.Text;
                gvw_main.ExportToXlsx(fileDialog.FileName, options);
            }
        }

        private void gvw_main_CustomColumnDisplayText(object sender, DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs e)
        {
            if (e.Column.FieldName == "PrintNum")
            {
                if (e.Value != null)
                {
                    switch (e.Value.ToString())
                    {
                        case "0":
                            e.DisplayText = "未打印"; break;
                        case "9":
                            e.DisplayText = "A4打印"; break;
                        default:
                            e.DisplayText = "针式打印"; break;
                    }
                }
            }
        }
    }
}
